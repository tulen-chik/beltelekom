-- Enable RLS on users
ALTER TABLE auth.users ENABLE ROW LEVEL SECURITY;

-- Create subscribers_profiles table with an additional column for full UUID as text
CREATE TABLE public.subscribers_profiles (
  subscriber_id UUID PRIMARY KEY REFERENCES auth.users (id) ON DELETE CASCADE,
  category TEXT CHECK (category IN ('0.5', '1')) NOT NULL,
  role TEXT CHECK (role IN ('admin', 'user')) DEFAULT 'user',
  subscriber_id_substring TEXT NOT NULL  -- Хранит полный UUID как текст
);

-- Enable RLS on subscribers_profiles
ALTER TABLE public.subscribers_profiles ENABLE ROW LEVEL SECURITY;

-- Create calls table
CREATE TABLE public.calls (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  zone_code TEXT NOT NULL,
  call_date DATE NOT NULL,
  start_time TIME NOT NULL,
  duration INTEGER NOT NULL,
  subscriber_id UUID NOT NULL REFERENCES public.subscribers_profiles(subscriber_id)
);

-- Create tariffs table
CREATE TABLE public.tariffs (
  zone_code TEXT NOT NULL,
  name TEXT NOT NULL,
  start_date DATE NOT NULL,
  day_rate_start NUMERIC(10,4),
  night_rate_start NUMERIC(10,4),
  end_date DATE NOT NULL,
  day_rate_end NUMERIC(10,4),
  night_rate_end NUMERIC(10,4),
  PRIMARY KEY (zone_code, start_date)
);

-- Create bills table
CREATE TABLE public.bills (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  subscriber_id UUID NOT NULL REFERENCES public.subscribers_profiles(subscriber_id),
  start_date DATE NOT NULL,
  end_date DATE NOT NULL,
  amount NUMERIC(10,2) NOT NULL,
  details JSONB NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Enable RLS on bills
ALTER TABLE public.bills ENABLE ROW LEVEL SECURITY;

-- Create RLS policy for bills
CREATE POLICY "Enable read access for authenticated users" ON public.bills
  FOR SELECT USING (auth.role() = 'authenticated');

CREATE POLICY "Enable insert for admins" ON public.bills
  FOR INSERT TO authenticated
  WITH CHECK (EXISTS (
    SELECT 1 FROM public.subscribers_profiles
    WHERE subscriber_id = auth.uid() AND role = 'admin'
  ));

-- Create RLS policies for other tables
CREATE POLICY "Enable read access for authenticated users" ON public.calls
  FOR SELECT USING (auth.role() = 'authenticated');

CREATE POLICY "Enable read access for authenticated users" ON public.subscribers_profiles
  FOR SELECT USING (auth.role() = 'authenticated');

CREATE POLICY "Enable read access for authenticated users" ON public.tariffs
  FOR SELECT USING (auth.role() = 'authenticated');

-- Create a trigger for the subscribers_profiles table
CREATE OR REPLACE FUNCTION update_subscriber_id_substring()
RETURNS TRIGGER AS $$
BEGIN
    NEW.subscriber_id_substring := NEW.subscriber_id::text; -- Сохраняем полный UUID как текст
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Создайте триггер для установки subscriber_id_substring
DROP TRIGGER IF EXISTS set_subscriber_id_substring ON public.subscribers_profiles;

CREATE TRIGGER set_subscriber_id_substring
BEFORE INSERT OR UPDATE ON public.subscribers_profiles
FOR EACH ROW EXECUTE FUNCTION update_subscriber_id_substring();

-- Insert sample tariff data
INSERT INTO public.tariffs (zone_code, name, start_date, day_rate_start, night_rate_start, end_date, day_rate_end, night_rate_end) VALUES
('218', 'Абонплата- месяц', '2024-01-01', NULL, 3.15, '2024-06-01', NULL, 3.15),
('219', 'Повременная плата за каждую полную и неполную минуту разговора', '2024-01-01', 0.0071, 0.0071, '2024-06-01', 0.0091, 0.0091),
('230', 'Междугородные разговоры (внутри республики)', '2022-06-01', 0.0268, 0.0268, '2022-04-05', 0.0288, 0.03),
('901', 'СНГ I', '2022-06-01', 0.3, 0.15, '2024-01-01', 0.4, 0.28),
('902', 'СНГ II', '2022-06-01', 0.4125, 0.29, '2024-01-01', 0.4125, 0.29),
('903', 'СНГ III', '2022-06-01', 0.5, 0.35, '2024-01-01', 0.5, 0.35),
('904', 'Европа I', '2022-06-01', 0.3825, 0.268, '2024-01-01', 0.3825, 0.268),
('905', 'Европа II', '2022-06-01', 0.4125, 0.29, '2024-01-01', 0.4125, 0.29),
('906', 'Европа III', '2022-06-01', 0.5, 0.35, '2024-01-01', 0.5, 0.35),
('907', 'МИР I', '2022-06-01', 0.625, 0.3125, '2024-01-01', 0.625, 0.3125),
('908', 'МИР II', '2022-06-01', 1.375, 0.6875, '2024-01-01', 1.375, 0.6875);